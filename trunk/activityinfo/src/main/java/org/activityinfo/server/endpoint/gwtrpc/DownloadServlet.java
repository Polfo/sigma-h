package org.activityinfo.server.endpoint.gwtrpc;

import com.google.inject.Inject;
import com.google.inject.Singleton;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * A simple servlet that serves a temporary file with a Content-Disposition
 * Header and a friendly file name.
 * <p/>
 * Generally, these temporary files are generated by the
 * {@link org.activityinfo.server.endpoint.gwtrpc.handler.RenderElementHandler}
 * <p/>
 * The servlet expects the name of the temporary file in the query string. For
 * example,
 * <p/>
 * http://www.activityinfo.org/download?ABCDEF12345ABCDEF12345.jpg
 *
 * @author Alex Bertram
 */
@Singleton
public class DownloadServlet extends HttpServlet {

    private ServletContext context;
    private SimpleDateFormat dateFormat;

    private static int BUFFER_SIZE = 4096;

    @Inject
    public DownloadServlet(ServletContext context) {
        this.context = context;
        dateFormat = (SimpleDateFormat) DateFormat.getDateInstance();
        dateFormat.applyPattern("yyyy_MM_dd_HH_mm");
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

        String tempFile = request.getQueryString();
        String tempPath = context.getRealPath("/temp/" + tempFile);

        String ext = tempFile.substring(tempFile.lastIndexOf("."));

        String friendlyName = "ActivityInfo" + dateFormat.format(new Date()) + ext;


        FileInputStream in = new FileInputStream(tempPath);

        // set the Content-Length header since we know it.
        File file = new File(tempPath);
        response.setContentLength((int) file.length());

        // The Content-Disposition header instructst he browser to download the file
        // with the given name rather than try to display it in-line. This usally means the
        // the user will be presented with a "Save As" dialog
        response.setContentType(context.getMimeType(tempPath));
        response.setContentLength((int) file.length());
        response.addHeader("Content-disposition", "attachment; filename=" + friendlyName);

        OutputStream out = response.getOutputStream();

        int bytesRead;
        byte[] buffer = new byte[BUFFER_SIZE];
        do {
            bytesRead = in.read(buffer);
            if (bytesRead > 0) {
                out.write(buffer, 0, bytesRead);
            }
        } while (bytesRead > 0);

    }
}
