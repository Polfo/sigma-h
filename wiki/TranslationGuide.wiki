#summary Guidelines for Sigmah translation.

= Introduction =

Some lessons have been learnt while translating Sigmah internationalization files, and this wiki page is here to share them for new translators.

Sigmah is using the Pootle server kindly shared by the Sahana HFOSS project on: * http://pootle.sahanafoundation.org/pootle/ *

= Guidelines for translators =

== Pootle User manual ==
The community of the Liferay project has written a good introduction guide for Pootle. You can read the following and replace each word "Liferay" by "Sigmah" and you'll get a user manuel !

* [http://www.liferay.com/community/wiki/-/wiki/Main/Translating+Liferay+using+Pootle Pootle User manual] *for project Liferay

== Lessons learnt for translators ==
  # *In doubt for a translation? _Solution 1_* Look at the string code (the text written at the top of your string translation box in very small font), it could give you an hint about what exactly is the usage of the string you have to translate (ie: the string "Calendar" has for code "projectTabCalendar", so the translator can get that this word is used for the tab named "Calendar" in a project page).
  # *In doubt for a translation? _Solution 2_* Write a comment, and send your translation as "Fuzzy" ("Approximatif" in French). If the software release on which you're working is not planned to be a public one, you can also add the string number as a suffix to your translation to see where this string is used in Sigmah.  
  # *No simple quote (')* in the UIMessages files. (Does not apply to UIConstants files) We know, it is not obvious and natural when you're typing... but the exported file from Pootle won't do the job for you, and if a you don't enter the simple quote by pairs ('' instead of ' (ie: -window''s title- instead of -window's title-)), the file generated from your translation will break the build. Of course, your file will be controlled before being used in the code, but two controls are always better than only one. :)


= Guidelines for Pootle admin =
== Source strings removal ==
Do not remove source strings from the property files. Static analysis via the Java will safely indentify unused methods in the UIConstants and UIMessages interfaces. Removal of unused methods should be conducted periodically by the development team.

== File upload ==
The management of the file upload, in the "Overview" tab of the language translation project, can be quite tricky and is not very intuitive in the first place.

A good general lesson to remember is: "*a `*`.properties file for first importation, and XLIFF generated file for second one*".

=== Files importation order ==
The first importation of a file in a language takes as granted that you send this file as a new source file in the original language for this new translation project. The name of the file has to be strictly the same as the potential similar one in other language, in order to let translators be able to see translations of a string in all available languages. You have to go to the "Files" tab of the language translation project and click on "Rescan project files" to actually process this source file.

All second importations are taken as importation of translations, if similar file name exist, and no more as import of source file, whatever the option used for importation.

=== Update source strings of a file ===
To update source strings of a file, the following procedure has to be used:
  # Export as XLIFF the file of which you want to update the source strings (with the command "Translate offline" in the "Review" tab of the translation project)
  # Delete the file of which you want to update the source strings (action available in the "Files" tab of the translation project)
  # Import your new version of the source file containing the new source strings (with the file upload available in the "Overview" tab of the translation project, and any option can be used for the upload as it is a first importation)
  # Import then your just generated XLIFF file with the option "Merge", and force the upload to the new source file you've just added.


== Importing files from translators into the code ==
Things to take in mind:
  * Check that no file exported from Pootle contain a simple quote ('). Each simple quote should be preceded by a second one ('' instead of ' (ie: -window''s title- instead of -window's title-)). You can use the "singlequoting" option of the "Review" tab of your translation project to see faster all strings which have translated with a different number of single quotes.
  * An update of your working copy of the source code is naturally required.
  * Check for potential conflicts with the current copy in the source code repository.